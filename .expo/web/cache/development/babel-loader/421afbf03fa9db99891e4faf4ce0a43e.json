{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/darojuv/code/reactnativegit/ReactNative/screens/StartGameScreen.js\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Card from \"../components/Card\";\nimport Colors from \"../contsants/colors\";\nimport Input from \"../components/Input\";\nimport NumberContaier from \"../components/NumberContainer\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmed = _useState4[0],\n      serConfirmed = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedNumber = _useState6[0],\n      setSelectedNumber = _useState6[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, ''));\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredValue('');\n    serConfirmed(true);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var choseNumber = parseInt(enteredValue);\n\n    if (isNaN(choseNumber) || choseNumber <= 0 || choseNumber > 99) {\n      Alert.alert('Invalid Number', 'Number has to be number', [{\n        text: 'Okey',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    serConfirmed(true);\n    setSelectedNumber(parseInt(enteredValue));\n    setEnteredValue('');\n    Keyboard.dismiss();\n  };\n\n  var confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = React.createElement(Card, {\n      style: styles.summaryContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"You selected\"), React.createElement(NumberContaier, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, selectedNumber), React.createElement(Button, {\n      title: \"START GAME\",\n      onPress: function onPress() {\n        return props.onStartGame(selectedNumber);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }));\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Start a new Game\"), React.createElement(Card, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Select a Number\"), React.createElement(Input, {\n    blurOnSubmit: true,\n    autoCapitalize: \"none\",\n    autoCurrect: false,\n    keyboardType: \"number-pad\",\n    maxLength: 2,\n    styles: styles.input,\n    onChangeText: numberInputHandler,\n    value: enteredValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.buttonsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    title: \"Reset\",\n    onPress: resetInputHandler,\n    color: Colors.accent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 51\n    }\n  })), React.createElement(View, {\n    style: styles.buttons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: confirmInputHandler,\n    color: Colors.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 51\n    }\n  })))), confirmedOutput));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10\n  },\n  inputContainer: {\n    padding: 20,\n    borderRadius: 20,\n    width: 300,\n    alignContent: 'center'\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    alignContent: 'space-around',\n    width: '100%',\n    justifyContent: 'space-between',\n    paddingHorizontal: 15\n  },\n  buttons: {\n    width: 100\n  },\n  input: {\n    width: 50,\n    textAlign: 'center'\n  },\n  summaryContainer: {\n    marginTop: 20,\n    alignItems: 'center'\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"sources":["/Users/darojuv/code/reactnativegit/ReactNative/screens/StartGameScreen.js"],"names":["React","useState","Card","Colors","Input","NumberContaier","StartGameScreen","props","enteredValue","setEnteredValue","confirmed","serConfirmed","selectedNumber","setSelectedNumber","numberInputHandler","inputText","replace","resetInputHandler","confirmInputHandler","choseNumber","parseInt","isNaN","Alert","alert","text","style","onPress","Keyboard","dismiss","confirmedOutput","styles","summaryContainer","onStartGame","screen","inputContainer","input","buttonsContainer","buttons","accent","primary","StyleSheet","create","flex","padding","alignItems","title","fontSize","marginVertical","borderRadius","width","alignContent","flexDirection","justifyContent","paddingHorizontal","textAlign","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport {View, StyleSheet, Text, Button, TouchableWithoutFeedback, Keyboard, Alert } from 'react-native';\n\nimport Card from '../components/Card';\nimport Colors from '../contsants/colors';\nimport Input from '../components/Input';\nimport NumberContaier from '../components/NumberContainer';\n\nconst StartGameScreen = props => {\n    const [ enteredValue, setEnteredValue ] = useState('');\n    const [ confirmed, serConfirmed] = useState('');\n    const [ selectedNumber, setSelectedNumber ] = useState('');\n    const numberInputHandler = inputText => {\n        setEnteredValue(inputText.replace(/[^0-9]/g, ''));\n    };\n    const resetInputHandler = () => {\n        setEnteredValue('');\n        serConfirmed(true);\n    };\n    const confirmInputHandler = () => {\n        const choseNumber = parseInt(enteredValue);\n        if(isNaN(choseNumber) || choseNumber <= 0 || choseNumber > 99){\n            Alert.alert('Invalid Number', 'Number has to be number',[{text: 'Okey', style:'destructive', onPress: resetInputHandler}]);\n            return;\n        }\n        serConfirmed(true);\n        setSelectedNumber(parseInt(enteredValue));\n        setEnteredValue('');\n        Keyboard.dismiss();\n    };\n    let confirmedOutput; \n    if(confirmed)\n    {\n        confirmedOutput = \n        <Card style={styles.summaryContainer}>\n            <Text >You selected</Text>\n            <NumberContaier>\n                {selectedNumber}\n            </NumberContaier>\n            <Button title=\"START GAME\" onPress={() => props.onStartGame(selectedNumber)} />\n        </Card>\n    }\n    return (\n        <TouchableWithoutFeedback onPress={() => { Keyboard.dismiss();}} >\n            <View style={styles.screen}>\n                <Text>Start a new Game</Text>\n\n                <Card style={styles.inputContainer} >\n                <Text>Select a Number</Text>\n                <Input blurOnSubmit \n                       autoCapitalize='none' autoCurrect={false} keyboardType=\"number-pad\" maxLength={2} styles={styles.input}\n                       onChangeText={numberInputHandler}\n                       value={enteredValue}  />\n                <View style={styles.buttonsContainer} >\n                    <View style={styles.buttons} ><Button title=\"Reset\" onPress={resetInputHandler} color={Colors.accent} /></View>\n                    <View style={styles.buttons} ><Button title=\"Confirm\" onPress={confirmInputHandler} color={Colors.primary} /></View>\n                </View>\n                </Card>\n            {confirmedOutput}\n            </View>\n\n        </TouchableWithoutFeedback>\n            \n        );\n};\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        padding: 10,\n        alignItems: 'center',\n        // justifyContent: 'center'\n    },\n    title:{\n        fontSize: 20,\n        marginVertical: 10\n    },\n    inputContainer:{\n        padding: 20,\n        borderRadius:20,\n        width: 300,\n        alignContent: 'center',\n    },\n    buttonsContainer: {\n        flexDirection:'row',\n        alignContent: 'space-around',\n        width: '100%',\n        justifyContent: 'space-between',\n        paddingHorizontal: 15\n    },\n    buttons:{\n        width:100\n    },\n    input:{\n        width:50,\n        textAlign:'center'\n    },\n    summaryContainer:{\n        marginTop: 20,\n        alignItems: 'center'\n    }\n});\n\nexport default StartGameScreen;"]},"metadata":{},"sourceType":"module"}