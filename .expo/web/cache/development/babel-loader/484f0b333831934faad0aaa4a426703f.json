{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/darojuv/code/reactnativegit/ReactNative/screens/GameScreen.js\";\n\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Card from \"../components/Card\";\nimport NumberContaier from \"../components/NumberContainer\";\n\nvar generateRandomBetween = function generateRandomBetween(min, max, exclude) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n};\n\nvar GameScreen = function GameScreen(props) {\n  var _useState = useState(generateRandomBetween(1, 100, props.userChoice)),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var currentLow = useRef(1);\n  var currentHigh = useRef(100);\n\n  var nextGuessHandler = function nextGuessHandler(direction) {\n    if (direction === 'lower' && currentGuess < props.userChoice || direction === 'greater' && currentGuess > props.userChoice) {\n      Alert.alert('Don\\'t lie!', 'You know that this is wrong...', [{\n        Text: 'Sorry!',\n        style: 'cancel'\n      }]);\n      return;\n    }\n\n    if (direction === 'lower') {\n      currentHigh.current = currentGuess;\n    } else {\n      currentLow.current = currentGuess;\n    }\n\n    var nextNumber = generateRandomBetween(currentLow.current, currentHigh.current, currentGuess);\n    setCurrentGuess(nextNumber);\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, \"Opponent's Guess \"), React.createElement(NumberContaier, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, currentGuess), React.createElement(Card, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  }, React.createElement(Button, {\n    title: \"LOWER\",\n    onPress: nextGuessHandler.bind(_this, 'lower'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }), React.createElement(Button, {\n    title: \"GREATER\",\n    onPress: nextGuessHandler.bind(_this, 'greater'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 20,\n    width: 300,\n    maxWidth: '80%'\n  }\n});\nexport default GameScreen;","map":{"version":3,"sources":["/Users/darojuv/code/reactnativegit/ReactNative/screens/GameScreen.js"],"names":["React","useState","useRef","Card","NumberContaier","generateRandomBetween","min","max","exclude","Math","ceil","floor","rndNum","random","GameScreen","props","userChoice","currentGuess","setCurrentGuess","currentLow","currentHigh","nextGuessHandler","direction","Alert","alert","Text","style","current","nextNumber","styles","screen","buttonContainer","bind","StyleSheet","create","flex","padding","alignItems","flexDirection","justifyContent","marginTop","width","maxWidth"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react';\n\nimport {View, StyleSheet, Text, TextInput, Button, Alert} from 'react-native';\nimport Card from '../components/Card';\n\nimport NumberContaier from '../components/NumberContainer';\n\n\nconst generateRandomBetween = (min, max, exclude) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    const rndNum = Math.floor(Math.random() * (max - min)) + min;\n    if(rndNum === exclude){\n        return generateRandomBetween(min, max, exclude);   \n    } else {\n        return rndNum;\n    }\n};\n\nconst GameScreen = props => { \n    const [currentGuess, setCurrentGuess] = useState(\n        generateRandomBetween(1, 100, props.userChoice)\n        );\n    const currentLow = useRef(1);\n    const currentHigh = useRef(100);\n    const nextGuessHandler = direction => {\n        if((direction === 'lower' && currentGuess < props.userChoice) || (direction === 'greater' && currentGuess > props.userChoice)){\n            Alert.alert('Don\\'t lie!', 'You know that this is wrong...', [{ Text:'Sorry!', style:'cancel'}]);\n            return;\n        }\n        if(direction === 'lower'){\n            currentHigh.current = currentGuess;\n        } else {\n            currentLow.current = currentGuess;\n        }\n        const nextNumber = generateRandomBetween(currentLow.current, currentHigh.current, currentGuess);\n        setCurrentGuess(nextNumber);\n    };\n\n    return <View style={styles.screen}>\n     <Text>Opponent's Guess </Text>\n     <NumberContaier>{currentGuess}</NumberContaier>\n     <Card style={styles.buttonContainer}>\n         <Button title=\"LOWER\" onPress={nextGuessHandler.bind(this, 'lower')} />\n         <Button title=\"GREATER\"  onPress={nextGuessHandler.bind(this, 'greater')} />\n     </Card>\n    </View>\n};\n\nconst styles = StyleSheet.create({\n    screen:{\n        flex:1,\n        padding:10,\n        alignItems:'center',\n\n    },\n    buttonContainer:{\n        flexDirection:'row',\n        justifyContent: 'space-around',\n        marginTop:20,\n        width:300,\n        maxWidth:'80%'\n    }\n});\n\n\nexport default GameScreen;"]},"metadata":{},"sourceType":"module"}